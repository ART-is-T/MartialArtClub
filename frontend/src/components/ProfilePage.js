import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import {
  Box,
  Typography,
  Paper,
  TextField,
  Button
} from "@mui/material";
import axios from "../axiosConfig";

function ProfilePage() {
  const { id } = useParams();
  const [user, setUser] = useState(null);
  const [editMode, setEditMode] = useState(false);
  const [formData, setFormData] = useState({});
  const [error, setError] = useState("");

  useEffect(() => {
    axios.get(`/api/users/${id}`)
      .then(res => {
        setUser(res.data);
        setFormData(res.data);
      })
      .catch(err => {
        console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è", err.response || err.message);
        setError(`–û—à–∏–±–∫–∞: ${err.response?.status} ${err.response?.statusText}`);
      });
  }, [id]);

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSave = async () => {
    try {
      const res = await axios.put(`/api/users/${id}`, formData);
      setUser(res.data);
      setEditMode(false);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è", err.response || err.message);
      setError("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è");
    }
  };

  if (error) {
    return <Typography color="error" sx={{ mt: 8 }}>{error}</Typography>;
  }
  if (!user) {
    return <Typography sx={{ mt: 8 }}>–ó–∞–≥—Ä—É–∑–∫–∞...</Typography>;
  }

  return (
    <Box
      sx={{
        minHeight: "100vh",
        display: "flex",
        justifyContent: "center",
        alignItems: "flex-start",
        pt: 8,
        px: 2,
      }}
    >
      <Paper sx={{ p: 4, maxWidth: 600, width: "100%" }}>
        <Typography variant="h4" gutterBottom>
          –ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        </Typography>

        {editMode ? (
          <>
            <TextField
              label="–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
              name="username"
              value={formData.username}
              onChange={handleChange}
              fullWidth
              margin="normal"
              disabled // ‚ö†Ô∏è –ª–æ–≥–∏–Ω –ª—É—á—à–µ –Ω–µ –º–µ–Ω—è—Ç—å
            />
            <TextField
              label="–ü–æ–ª–Ω–æ–µ –∏–º—è"
              name="fullName"
              value={formData.fullName || ""}
              onChange={handleChange}
              fullWidth
              margin="normal"
            />
            <TextField
              label="Email"
              name="email"
              value={formData.email || ""}
              onChange={handleChange}
              fullWidth
              margin="normal"
            />

            {user.role === "STUDENT" && (
              <>
                <TextField
                  label="–£—Ä–æ–≤–µ–Ω—å"
                  name="skillLevel"
                  value={formData.skillLevel || ""}
                  onChange={handleChange}
                  fullWidth
                  margin="normal"
                />
                <TextField
                  label="–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ"
                  name="martialArt"
                  value={formData.martialArt || ""}
                  onChange={handleChange}
                  fullWidth
                  margin="normal"
                />
              </>
            )}

            {user.role === "COACH" && (
              <>
                <TextField
                  label="–û–ø—ã—Ç"
                  name="experience"
                  value={formData.experience || ""}
                  onChange={handleChange}
                  fullWidth
                  margin="normal"
                />
                <TextField
                  label="–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"
                  name="certificates"
                  value={formData.certificates || ""}
                  onChange={handleChange}
                  fullWidth
                  margin="normal"
                />
              </>
            )}

            <Box sx={{ mt: 2 }}>
              <Button
                variant="contained"
                color="secondary"           // üëà —è—Ä–∫–æ-–∑–µ–ª—ë–Ω—ã–π —Ç–≤–æ–π secondary
                onClick={handleSave}
                sx={{ mr: 1 }}
              >
                –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
              </Button>
              <Button
                variant="outlined"
                color="secondary"           // üëà —Å–≤–µ—Ç–ª–∞—è –æ–±–≤–æ–¥–∫–∞ + –∑–µ–ª–µ–Ω—ã–π —Ç–µ–∫—Å—Ç
                onClick={() => setEditMode(false)}
              >
                –û—Ç–º–µ–Ω–∞
              </Button>
            </Box>
          </>
        ) : (
          <>
            <Typography><b>–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> {user.username}</Typography>
            <Typography><b>–ü–æ–ª–Ω–æ–µ –∏–º—è:</b> {user.fullName}</Typography>
            <Typography><b>Email:</b> {user.email}</Typography>
            <Typography><b>–†–æ–ª—å:</b> {user.role}</Typography>

            {user.role === "STUDENT" && (
              <>
                <Typography><b>–£—Ä–æ–≤–µ–Ω—å:</b> {user.skillLevel || "‚Äî"}</Typography>
                <Typography><b>–ë–æ–µ–≤—ã–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞:</b> {user.martialArt || "‚Äî"}</Typography>
              </>
            )}
            {user.role === "COACH" && (
              <>
                <Typography><b>–û–ø—ã—Ç:</b> {user.experience || "‚Äî"}</Typography>
                <Typography><b>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã:</b> {user.certificates || "‚Äî"}</Typography>
              </>
            )}

            <Box sx={{ mt: 2 }}>
              <Button variant="contained" onClick={() => setEditMode(true)}>
                –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
              </Button>
            </Box>
          </>
        )}
      </Paper>
    </Box>
  );
}

export default ProfilePage;